---
# File: roles/containerization/tasks/main.yml

- name: install docker for container execution environment
  apt: name=docker.io state=latest
  tags:
    - containerization
    - docker

- name: create the installation directory for Kubernetes
  file: name={{ k8s_installation_directory }} state="directory"
  tags:
    - containerization
    - kubernetes

- name: download the Kubernetes release package
  uri: url={{ k8s_url }}
       dest=~/{{ k8s_tar_file }}
       creates=~/{{ k8s_tar_file }}
  register: download_result
  tags:
    - containerization
    - kubernetes

- name: unarchive the Kubernetes release
  unarchive: copy=no
             src=~/{{ k8s_tar_file }}
             dest={{ k8s_installation_directory }}
             creates={{ k8s_home_directory }}
#  when: download_result | changed
  register: unarchive_result
  tags:
    - containerization
    - kubernetes

- name: move the unarchived files to the standard location
  command: mv {{ k8s_tar_directory }} {{ k8s_home_directory }}
  when: unarchive_result | changed
  tags:
    - containerization
    - kubernetes

- name: create a pretty symlink to the latest Kubernetes version
  file: src={{ k8s_home_directory }}
        path={{ k8s_installation_directory }}/latest
        state=link
  when: unarchive_result | changed
  tags:
    - containerization
    - kubernetes

- name: fix the group 
  file: path={{ k8s_home_directory }}
        recurse=yes
        state=directory
        group=docker
  tags:
    - containerization
    - kubernetes

- name: install the Kubernetes binaries (server and client)
  shell: export KUBERNETES_SKIP_CONFIRM=true && ./cluster/get-kube-binaries.sh
         chdir={{ k8s_installation_directory }}/latest
         creates=./client/bin/
  tags:
    - containerization
    - kubernetes


- name: put kubectl on the user's path
  file: src={{ k8s_installation_directory }}/latest/client/bin/kubectl
        path=/usr/bin/kubectl
        state=link
  tags:
    - containerization
    - kubernetes

#
# HyperKube is now deprecated in favor of MiniKube
#

- name: remove the directory for the convenience scripts
  file: name={{ k8s_installation_directory }}/scripts state=directory
        state=absent
  tags:
    - containerization
    - kubernetes

- name: remove scripts from the user's path
  file: path={{ item }}
        state=absent
  with_items:
    - /usr/bin/kube-up
    - /usr/bin/kube-down
  tags:
    - containerization
    - kubernetes

#
# Minikube
#

- name: create the installation directory for MiniKube
  file: name={{ minikube_home_directory }} state=directory
  tags:
    - containerization
    - kubernetes
    - minikube

- name: download the MiniKube executable
  uri: url={{ minikube_url }}
       dest="{{ minikube_home_directory }}/{{ minikube_file }}"
       creates="{{ minikube_home_directory }}/{{ minikube_file }}"
       mode=755
  register: download_result
  tags:
    - containerization
    - kubernetes
    - minikube

- name: create a pretty symlink to the latest MiniKube version
  file: src={{ minikube_home_directory }}
        path={{ minikube_installation_directory }}/latest
        state=link
  when: download_result | changed
  tags:
    - containerization
    - kubernetes
    - minikube

- name: put minikube on the user's path
  file: src={{ minikube_installation_directory }}/latest/{{ minikube_file }}
        path=/usr/bin/minikube
        state=link
  tags:
    - containerization
    - kubernetes
    - minikube

#
# Kubectx
#

- name: "create the installation directory for kubectx"
  file:
    name: "{{ kubectx_installation_directory }}"
    state: "directory"
  tags:
    - containerization
    - kubernetes
    - kubectx

- name: "download the kubectx archive"
  uri:
    url: "{{ kubectx_url }}"
    dest: "~/{{ kubectx_file }}"
    creates: "~/{{ kubectx_file }}"
    mode: "755"
  register: "kubectx_download_result"
  tags:
    - containerization
    - kubernetes
    - kubectx

- name: "expand the kubectx archive"
  unarchive:
    src: "~/{{ kubectx_file }}"
    dest: "{{ kubectx_installation_directory }}"
    copy: "no"
    creates: "{{ kubectx_home_directory }}"
  register: "kubectx_unarchive_result"
  tags:
    - containerization
    - kubernetes
    - kubectx

- name: "rename the archive directory to the version number"
  command: "mv {{ kubectx_installation_directory }}/kubectx-{{ kubectx_version }} {{ kubectx_home_directory }}"
  when: "kubectx_unarchive_result | changed"
  tags:
    - containerization
    - kubernetes
    - kubectx

- name: "make a pretty symlink to the new version"
  file:
    src: "{{ kubectx_home_directory }}"
    path: "{{ kubectx_installation_directory }}/latest"
    state: "link"
  tags:
    - containerization
    - kubernetes
    - kubectx

- name: "create symlinks to the executables"
  file:
    src: "{{ kubectx_installation_directory }}/latest/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: "link"
  with_items: "{{ kubectx_executables }}"
  tags:
    - containerization
    - kubernetes
    - kubectx

- name: "create symlinks for bash completion"
  file:
    src: "{{ kubectx_installation_directory }}/latest/completion/{{ item }}.bash"
    dest: "/etc/bash_completion.d/{{ item }}.bash"
    state: "link"
  with_items: "{{ kubectx_executables }}"
  tags:
    - containerization
    - kubernetes
    - kubectx

